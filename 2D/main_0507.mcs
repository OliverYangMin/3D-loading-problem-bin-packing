require 'Rect'
require 'Space'
require 'functions'




function main()
    math.randomseed(8)
    local starttime = os.time()
    local used_volume = 0
    init()
    repeat
        table.sort(empty, compareSpace) 
        
        local index = math.random(#empty) -- choose the maxiaml space
        local layer, layer_type = empty[index]:chooseBestLayer()    -- choose layer: rect type\rect direction\column direction
        
        empty[index]:setLayerPosition(layer)                        -- choose the layer`s position, 
        rects[layer_type].num = rects[layer_type].num - layer.num
        
        local spaces = empty[index]:createMaxSpace(layer) 
        
        layer:draw(); layer:pos(); layer:cutBox()
        --Update(m3d)
        used_volume = used_volume + layer.volume
    
        table.remove(empty, index)  

        layer:cutSpaceOverlap()        
        for i=1,#spaces do spaces[i]:insertEmpty() end
        --Sleep(500)
    until isNoLeft() or #empty == 0 
    outputResult(used_volume, starttime)
end 

main()